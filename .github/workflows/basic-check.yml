name: Basic Project Check

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  check:
    name: Check Project & Tests
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: laravel_nutrition_test
          MYSQL_USER: laravel_user
          MYSQL_PASSWORD: user_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Copy environment file
      run: cp docker-env-example.txt .env

    - name: Install PHP dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Install Node dependencies
      run: npm ci

    - name: Generate application key
      run: php artisan key:generate

    - name: Create database
      run: |
        mysql -h 127.0.0.1 -u laravel_user -puser_password -e "CREATE DATABASE IF NOT EXISTS laravel_nutrition_test;"

    - name: Run database migrations
      run: php artisan migrate --env=testing

    - name: Run database seeders
      run: php artisan db:seed --class=CypressTestSeeder --env=testing

    - name: Run Tests
      run: php artisan test --env=testing
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: laravel_nutrition_test
        DB_USERNAME: laravel_user
        DB_PASSWORD: user_password
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    - name: Build frontend assets
      run: npm run build

    - name: Test Application Startup
      run: |
        php artisan serve --host=0.0.0.0 --port=8000 &
        sleep 10
        curl -f http://localhost:8000 || exit 1
        echo "âœ… Application is running successfully!"
        pkill -f "php artisan serve"
